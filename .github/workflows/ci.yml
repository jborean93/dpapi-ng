name: Test dpapi-ng
on:
  push:
    branches:
    - main
    paths-ignore:
    - CHANGELOG.md
    - LICENSE
    - README.md

  pull_request:
    branches:
    - main
    paths-ignore:
    - CHANGELOG.md
    - LICENSE
    - README.md

  release:
    types:
    - published

jobs:
  build:
    name: build project
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build sdist and wheel
      run: |
        python -m pip install build
        python -m build --sdist --wheel

    - uses: actions/upload-artifact@v3
      with:
        name: artifact
        path: ./dist/*

  test:
    name: test
    needs:
    - build

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        python-version:
        - 3.7
        - 3.8
        - 3.9
        - '3.10'
        - '3.11'
        python-arch:
        - x86
        - x64

        exclude:
        - os: ubuntu-latest
          python-arch: x86

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.python-arch }}

    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: ./dist

    - name: Extract OS name
      shell: bash
      run: |
        echo NAME=$( echo '${{ matrix.os }}' | tr '-' ' ' | awk '{print $1}' )
        echo "name=${NAME}" >> $GITHUB_OUTPUT
      id: os

    - name: Test
      shell: bash
      run: |
        if [ "$(expr substr $(uname -s) 1 5)" == "MINGW" ]; then
            build_helpers/run-ci.sh
        else
            sudo -E build_helpers/run-ci.sh
        fi
      env:
        PYTEST_ADDOPTS: --color=yes

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Unit Test Results (${{ matrix.os }} ${{ matrix.python-version }} ${{ matrix.python-arch }})
        path: ./junit/test-results.xml

    - name: Upload Coverage Results
      if: always() && !startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v3
      with:
        name: Coverage Results (${{ matrix.os }} ${{ matrix.python-version }} ${{ matrix.python-arch }})
        path: ./coverage.xml

    - name: Upload Coverage to codecov
      if: always()
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        flags: ${{ steps.os.outputs.name }},py${{ matrix.python-version }},${{ matrix.python-arch }}

  publish:
    name: publish
    needs:
    - test
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: ./dist

    - name: Publish
      if: startsWith(github.ref, 'refs/tags/v')
      uses: pypa/gh-action-pypi-publish@release/v1
